// api/token.js
import jwt from "jsonwebtoken";
import { randomUUID } from "crypto";

export default function handler(req, res) {
  // CORS + NO-CACHE
  res.setHeader("Access-Control-Allow-Origin", "*");
  res.setHeader("Access-Control-Allow-Methods", "GET,POST,OPTIONS");
  res.setHeader("Access-Control-Allow-Headers", "Content-Type, Authorization");
  res.setHeader("Cache-Control", "no-store, no-cache, must-revalidate, max-age=0");
  res.setHeader("Pragma", "no-cache");
  res.setHeader("Expires", "0");
  if (req.method === "OPTIONS") return res.status(204).end();

  const {
    JWT_SECRET = "GANTI_DENGAN_SECRET_YANG_KUAT",
    ACCESS_TTL = "900", // detik
    AUTHOR = "FAJRIAG - https://github.com/FAJRIAG",
  } = process.env;

  const userId = Number(req.query.userId || 292042932);
  const registerType = String(req.query.registerType || "TEMP");
  const payload = { registerType, userId };

  try {
    // buat JWT
    const jwtStr = jwt.sign(payload, JWT_SECRET, {
      algorithm: "HS256",
      expiresIn: Number(ACCESS_TTL),
    });

    // bungkus base64 (mirip layanan referensi)
    const wrapped = Buffer.from(jwtStr, "utf8").toString("base64");

    // device id (UUID)
    const deviceid = randomUUID();

    res.status(200).json({
      author: AUTHOR,
      token: wrapped,
      deviceid,
      info: "Token auto-generated by your own Vercel function",
    });
  } catch (e) {
    res.status(500).json({ ok: false, error: e.message });
  }
}
